/**
\page page_development_environment Development Environment

<h2>Build Instructions</h2>

Building the Project requires [CMake](http://www.cmake.org/) Version 2.8. See CMake documentation for more information about building using CMake.

Building the Unittests requires [google mock] (http://code.google.com/p/googlemock/) and [google test] (http://code.google.com/p/googletest/).<br>
Building the feature tests (BDD style tests using Gerkhin) requires [Cucumber-cpp] (https://github.com/cucumber/cucumber-cpp) by Paolo Ambrosio, [google test] (http://code.google.com/p/googletest/) and Boost (regex, filesystem, date_time, chrono, thread, system).<br>
Building the Specification/Context tests requires [CppSpec] (https://github.com/tpuronen/cppspec) by Timo Puronen.<br>
Building the BDD style Igloo tests requires [Igloo] (http://igloo-testing.org/) by Joakim Karlsson.<br>

The external dependencies can be downloaded and build using CMake's ExternalProject (make target external_dependencies).

<h3>Generate Visual Studio 2013 solution</h3>
Executing the <tt>create_VS_solution.bat</tt> batch file creates a Visual Studio 2013 solution under <em>vs_build</em>.
<em>Note:</em>If cmake is installed but can not be found, provide the path to the bin folder to the script<br>
Usage: <tt>create_VS_solution.bat --cmake_path &lt;path_to_cmake_root&gt;<tt>
<em>Note:</em>Creating a Visual Studio 2013 Solution requires a recent CMake version (> CMake 2.8.11.2)<br>

<h3>Windows (NMake)</h3>
Executing the <tt>build.bat</tt> batch file will build the project and all tests with nmake in folder <em>build</em>
<em>Note:</em>If cmake is installed but can not be found, provide the path to the bin folder to the script<br>
Usage: <tt>build.bat --cmake_path &lt;path_to_cmake_root&gt;</tt>

Executing the <tt>create_windows_installer.bat</tt> batch file will build the project in <em>build</em> and create a NSIS installer which is put in folder <em>install</em>.

<h3>Linux</h3>
E.g.
<tt>mkdir build && (cd build && cmake ..)</tt><br>
<tt>cmake --build build --target external_dependencies --config Debug</tt><br>
<tt>cmake --build build --target all --config Debug</tt><br>

<h2>Running Feature tests</h2>

See the [Cucumber-cpp documentation] (https://github.com/cucumber/cucumber-cpp) on how to run the feature tests with cucumber.

<h2>Sonar Metrics</h2>

In order to generate the code metrics and use sonar for publishing the metrics, [sonar-runner](http://docs.codehaus.org/display/SONAR/Installing+and+Configuring+Sonar+Runner), [cppcheck] (http://cppcheck.sourceforge.net/), [valgrind] (http://valgrind.org/) (Linux only) and [Rough Auditing Tool for Security (RATS)] (http://code.google.com/p/rough-auditing-tool-for-security/) (Linux only) are needed. 
On the sonar server the [C++ Community Plugin](http://docs.codehaus.org/pages/viewpage.action?pageId=185073817) should be installed.

*/

